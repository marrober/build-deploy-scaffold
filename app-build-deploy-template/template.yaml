apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: application-build-deploy-template
  title: Application with build process (Tekton) and deployment process (ArgoCD)
  description: Create a simple microservice to be built with Tekton Pipeline and deployed with ArgoCD. This includes a security check with ACS.
  tags:
    - java
    - tekton
    - argocd
spec:
  owner: rhdh
  type: service
  parameters:
    - title: Provide information for the application
      required:
        - application_name
      properties:
        component_id:
          title: Name
          type: string
          maxLength: 20
          pattern: '^[A-Z][A-Za-z0-9_]*$'
        application_name:
          title: Application name
          type: string
          description: Unique name of the application
          pattern: '^[A-Za-z0-9_]*$'
          maxLength: 20
          default: Pacman_1
        description:
          title: Description
          type: string
          description: Help others understand what this application does.
          default: A really useful application.
    - title: Source code repository Information
      required:
        - source_repo
      properties:
        source_repo:
          title: Source code repository
          type: object
          properties:
            host:
              title: Repository host 
              type: string
              description: The SCM Host
              enum:
                - github.com
                - gitlab.com
              default: github.com
            owner: 
              title: Repository owner
              type: string
              description: The SCM host organisation / group
              default: marrober
            repo_name:
              title: Repository name
              type: string
              description: Repository name 
              default: pacman
    - title: Provide information for the development cluster
      required:
        - cluster_name
        - smee_io_identifier
      properties:
        cluster_name:
          title: Cluster name
          type: string
          description: The demolab environment to which the ci process will be deployed.
          enum:
            - 'bakerville'
            - 'bloomfield'
            - 'brick'
            - 'cedar'
            - 'celeron'
            - 'coffee'
            - 'clarksdale'
            - 'comet'
            - 'conroe'
            - 'pentium'
            - 'sandy'
            - 'skylake'
            - 'whiskylake'
          default: skylake
        smee_io_identifier:
          title: SMEE.IO Identifier
          type: string
          description: The identifier for the SMEE.IO proxy service used to enable webhooks to reach into demolab.
          ui:field: EntityNamePicker
          default: vSantlzgFXh7ddOf
    - title: Provide Image Registry Information
      required:
        - image_registry
      properties:
        image_registry:
          title: Image Registry
          type: string
          enum:
            - Openshift
            - Quay
          default: OpenShift
      dependencies:
        image_registry:
          oneOf:
            - properties:
                image_registry:
                  enum:
                    - Openshift
                image_host:
                  title: Image Host
                  type: string
                  description: Host for storing image
                  default: image-registry.openshift-image-registry.svc:5000
                image_tag:
                  title: Image Tag
                  default: latest
                  type: string
                  description: Build Image tag
            - properties:
                image_registry:
                  enum:
                    - Quay
                image_host:
                  title: Image Host
                  type: string
                  description: Host for storing image
                  default: quay-v788m.apps.cluster-v788m.sandbox1746.opentlc.com
                image_organization:
                  title: Organization
                  type: string
                  description: Name of the Quay Organization
                  default: quayadmin
                image_tag:
                  title: Image Tag
                  default: latest
                  type: string
                  description: Build Image tag
    - title: Gitops repository Information
      required:
        - repo
      properties:
        repo:
          title: Repository Location
          type: object
          properties:
            host:
              title: Repo Host
              type: string
              ui:field: RepoUrlPicker
              ui:options:
                allowedHosts:
                  - github.com
                  - gitlab.com
            cd_git_username:
              title: Username for CD repo
              type: string
              description: The username for the CD repository
              default: marrober
            cd_git_email_address:
              title: Email address for CD repo
              type: string
              description: Email address of the user named above
              default: marrober@redhat.com
  steps:
    - id: log-message
      name: Log message
      action: debug:log
      input: 
        message: 'Parameters -> Application name : ${{ parameters.application_name }}, component_id : ${{ parameters.component_id }} source_repo_host : ${{ parameters.source_repo.host }} source_repo.name : ${{ parameters.source_code.repo_name }} source_repo.owner : ${{ parameters.source_repo.owner}}'
        listWorkspace: true
    - id: publish-scm
      name: Publish-scm
      action: publish:github
      input:
        repoUrl: "${{ parameters.source_repo.host }}?repo=${{ parameters.source_code.repo_name }}&owner=${{ parameters.source_repo.owner}}"
        repoVisibility: public

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish-scm.output.repoContentsUrl }}
        catalogInfoPath: "/manifest/catalog-info.yaml"

    - id: template-gitops-deployment
      name: Generating Deployment Resources
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          application-name: ${{ parameters.application_name }}
          cd_git_username: ${{ parameters.cd_git_username }}
          cd_git_email_address: ${{ parameters.cd_git_email_address }}
          smee_io_identifier: ${{ parameters.smee_io_identifier }}
          destination: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{parameters.application_name }}-gitops.git
          source_repository: https://${{ parameters.source_repo }}
          repository_name: ${{parameters.application_name}}
          git_owner: ${{ parameters.repo.owner }}
          cluster: ${{ values.cluster_name }}
          namespace: ${{ parameters.application_name }}-dev
          image_registry: ${{ parameters.image_registry }}
          image_host: ${{ parameters.image_host }}
          image_organization: ${{ parameters.image_organization }}
          image_name: ${{ parameters.component_id }}
          image_tag: ${{ parameters.image_tag }}
          port: 8080
          repository_host: ${{ parameters.repo.host }}
          deployment_name: ${{ parameters.application-name }}
          user: ${{ user.entity.metadata.name }}
        targetPath: ./tenant-gitops

    - id: publish-gitops
      name: Publishing to Resource Repository
      action: publish:gitlab
      input:
        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.repo.owner }}&repo=${{parameters.application_name }}-gitops"
        title: gitops resources for ${{ parameters.application_name }}
        description: gitops resources for ${{ parameters.application_name }}
        sourcePath: ./tenant-gitops
        repoVisibility: public

    - id: create-argocd-resources
      name: Create ArgoCD Resources
      action: argocd:create-resources
      input:
        appName: ${{ parameters.application_name }}-bootstrap
        argoInstance: main
        namespace: dh_argocd
        repoUrl: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{ parameters.application_name }}-gitops.git
        path: 'argocd/'

  output:
    links:
      - title: GitOps content SCM
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open Component in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
    message-0 : 'parameters -> Application name : ${{ parameters.application_name }}\n'
    message-1 : 'parameters -> Description      : ${{ parameters.description }}\n'

